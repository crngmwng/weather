{"ast":null,"code":"var _jsxFileName = \"/home/sasha/projects/weather.app/src/components/Home.js\";\nimport React from 'react';\nimport Navbar from './Navbar.js';\nimport Jumbotron from './Jumbotron.js';\nimport './Home.css';\nimport Footer from './Footer.js';\nimport Townslist from './Townslist.js';\nimport { Container } from 'react-bootstrap';\nimport { arrayExpression } from '@babel/types'; // const towns = [\n//     {\n//         \"id\": 1,\n//         \"title\": \"town1\", \n//         \"temperature\": \"20°C\",\n//         \"wind\": \"no wind\" ,\n//         \"clouds\": \"no clouds\"\n//     },\n//     {\n//         \"id\": 2,\n//         \"title\": \"town2\", \n//         \"temperature\": \"22°C\",\n//         \"wind\": \"no wind\",\n//         \"clouds\":\"no clouds\"\n//     },\n//     {\n//         \"id\": 3,\n//         \"title\": \"town3\", \n//         \"temperature\": \"20°C\",\n//         \"wind\": \"no wind\",\n//         \"clouds\": \"no clouds\"\n//     },\n//     {\n//         \"id\": 4,\n//         \"title\": \"town4\", \n//         \"temperature\": \"25°C\",\n//         \"wind\": \"no wind\",\n//         \"clouds\": \"no clouds\"\n//     }\n// ]\n\nconst Home = () => {\n  // function createTownslist() {\n  // let towns = [\"Sudak\", \"Yalta\", \"Kerch\", \"Feodosiya\"];\n  // let townslist = {};\n  //     towns.forEach(town => {\n  //         fetch(`https://api.weatherbit.io/v2.0/current?city=${town}&key=ced73555abfb464ebcb5d7e77f5be270`)\n  //         .then(res => res.json())\n  //         .then(json => townslist[town] = json.data[0])\n  //         }\n  //     )\n  //     return townslist;\n  // }\n  // console.log(createTownslist());\n  function createTownslist() {\n    let towns = [\"Sudak\", \"Yalta\", \"Kerch\", \"Feodosiya\"];\n    return Promise.all(towns.map(town => fetch(\"https://api.weatherbit.io/v2.0/current?city=\".concat(town, \"&key=ced73555abfb464ebcb5d7e77f5be270\")).then(res => res.json()).then(json => json.data))).then(response => {\n      return towns.reduce((acc, town, i) => {\n        acc[town] = response[i];\n        return acc;\n      }, {});\n    });\n  }\n\n  createTownslist().then(towns => console.log(Object.keys(towns), towns));\n\n  (async function () {\n    const towns = await createTownslist();\n    console.log(Object.keys(towns), towns);\n  })(); //   Array(4)\n  //   0: \"Sudak\"\n  //   1: \"Yalta\"\n  //   2: \"Kerch\"\n  //   3: \"Feodosiya\"\n  //   length: 4\n  //   __proto__: Array(0)\n  // \n  // \n  //   Object\n  // Feodosiya: [{…}]\n  // Kerch: [{…}]\n  // Sudak: [{…}]\n  // Yalta: [{…}]\n  // __proto__: Object\n\n\n  return React.createElement(\"div\", {\n    className: \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Jumbotron, {\n    title: \"Welcome\",\n    subtitle: \"Hello\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"home-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Townslist, {\n    townslist: createTownslist([\"Sudak\", \"Yalta\", \"Kerch\", \"Feodosiya\"], []),\n    towns: [\"Sudak\", \"Yalta\", \"Kerch\", \"Feodosiya\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }))), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["/home/sasha/projects/weather.app/src/components/Home.js"],"names":["React","Navbar","Jumbotron","Footer","Townslist","Container","arrayExpression","Home","createTownslist","towns","Promise","all","map","town","fetch","then","res","json","data","response","reduce","acc","i","console","log","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,eAAT,QAAgC,cAAhC,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAGf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,WAASC,eAAT,GAA2B;AACvB,QAAIC,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,WAA5B,CAAZ;AACA,WAAOC,OAAO,CAACC,GAAR,CACLF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAIC,KAAK,uDAAgDD,IAAhD,2CAAL,CACfE,IADe,CACVC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADG,EAEfF,IAFe,CAEVE,IAAI,IAAIA,IAAI,CAACC,IAFH,CAAlB,CADK,EAKJH,IALI,CAKCI,QAAQ,IAAI;AAChB,aAAOV,KAAK,CAACW,MAAN,CAAa,CAACC,GAAD,EAAMR,IAAN,EAAYS,CAAZ,KAAkB;AACpCD,QAAAA,GAAG,CAACR,IAAD,CAAH,GAAYM,QAAQ,CAACG,CAAD,CAApB;AACA,eAAOD,GAAP;AACD,OAHM,EAGJ,EAHI,CAAP;AAID,KAVI,CAAP;AAWD;;AAEDb,EAAAA,eAAe,GAAGO,IAAlB,CAAuBN,KAAK,IAAIc,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYjB,KAAZ,CAAZ,EAAgCA,KAAhC,CAAhC;;AAEA,GAAC,kBAAkB;AACjB,UAAMA,KAAK,GAAG,MAAMD,eAAe,EAAnC;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYjB,KAAZ,CAAZ,EAAgCA,KAAhC;AACD,GAHD,IAnCa,CAyCf;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACI;AACI;AACA;AACA;AACA;AACA;;;AAEJ,SACQ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,SAAjB;AAA2B,IAAA,QAAQ,EAAC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAED,eAAe,CAAC,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,WAA5B,CAAD,EAA2C,EAA3C,CAArC;AAAqF,IAAA,KAAK,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,WAA5B,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,EASQ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATR,CADR;AAaH,CAtED;;AAwEA,eAAeD,IAAf","sourcesContent":["import React from 'react';\nimport Navbar from './Navbar.js';\nimport Jumbotron from './Jumbotron.js'\nimport './Home.css'\nimport Footer from './Footer.js'\nimport Townslist from './Townslist.js';\nimport { Container } from 'react-bootstrap';\nimport { arrayExpression } from '@babel/types';\n\n\n// const towns = [\n//     {\n//         \"id\": 1,\n//         \"title\": \"town1\", \n//         \"temperature\": \"20°C\",\n//         \"wind\": \"no wind\" ,\n//         \"clouds\": \"no clouds\"\n//     },\n//     {\n//         \"id\": 2,\n//         \"title\": \"town2\", \n//         \"temperature\": \"22°C\",\n//         \"wind\": \"no wind\",\n//         \"clouds\":\"no clouds\"\n//     },\n//     {\n//         \"id\": 3,\n//         \"title\": \"town3\", \n//         \"temperature\": \"20°C\",\n//         \"wind\": \"no wind\",\n//         \"clouds\": \"no clouds\"\n//     },\n//     {\n//         \"id\": 4,\n//         \"title\": \"town4\", \n//         \"temperature\": \"25°C\",\n//         \"wind\": \"no wind\",\n//         \"clouds\": \"no clouds\"\n//     }\n// ]\n\nconst Home = () => {\n\n    \n    // function createTownslist() {\n    // let towns = [\"Sudak\", \"Yalta\", \"Kerch\", \"Feodosiya\"];\n    // let townslist = {};\n    //     towns.forEach(town => {\n    //         fetch(`https://api.weatherbit.io/v2.0/current?city=${town}&key=ced73555abfb464ebcb5d7e77f5be270`)\n    //         .then(res => res.json())\n    //         .then(json => townslist[town] = json.data[0])\n    //         }\n    //     )\n    //     return townslist;\n    // }\n    \n    // console.log(createTownslist());\n\n\n    function createTownslist() {\n        let towns = [\"Sudak\", \"Yalta\", \"Kerch\", \"Feodosiya\"];\n        return Promise.all(\n          towns.map(town => fetch(`https://api.weatherbit.io/v2.0/current?city=${town}&key=ced73555abfb464ebcb5d7e77f5be270`)\n            .then(res => res.json())\n            .then(json => json.data))\n        )\n          .then(response => {\n            return towns.reduce((acc, town, i) => {\n              acc[town] = response[i]\n              return acc\n            }, {})\n          })\n      }\n      \n      createTownslist().then(towns => console.log(Object.keys(towns), towns));\n      \n      (async function () {\n        const towns = await createTownslist()\n        console.log(Object.keys(towns), towns)\n      })()\n\n\n    //   Array(4)\n    //   0: \"Sudak\"\n    //   1: \"Yalta\"\n    //   2: \"Kerch\"\n    //   3: \"Feodosiya\"\n    //   length: 4\n    //   __proto__: Array(0)\n// \n// \n    //   Object\n        // Feodosiya: [{…}]\n        // Kerch: [{…}]\n        // Sudak: [{…}]\n        // Yalta: [{…}]\n        // __proto__: Object\n\n    return(\n            <div className=\"page\">\n                <Navbar /> \n                <Jumbotron title='Welcome' subtitle=\"Hello\"/>\n\n                <div className=\"home-container\">\n                    <Container>\n                        <Townslist townslist={createTownslist([\"Sudak\", \"Yalta\", \"Kerch\", \"Feodosiya\"], [])} towns={[\"Sudak\", \"Yalta\", \"Kerch\", \"Feodosiya\"]} />\n                    </Container>\n                </div>  \n                    <Footer />\n            </div>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}